/*
PostPuma - OpenAPI 3.0

PostPuma API specifications

API version: 1.0.0
Contact: support@postpuma.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package PostPuma

import (
	"encoding/json"
)

// checks if the CreatePostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreatePostRequest{}

// CreatePostRequest struct for CreatePostRequest
type CreatePostRequest struct {
	Date *string `json:"date,omitempty"`
	Time *string `json:"time,omitempty"`
	Timezone *string `json:"timezone,omitempty"`
	Schedule *bool `json:"schedule,omitempty"`
	ScheduleNow *bool `json:"schedule_now,omitempty"`
	Queue *bool `json:"queue,omitempty"`
	Accounts []int32 `json:"accounts,omitempty"`
	Tags []int32 `json:"tags,omitempty"`
	Versions []Version `json:"versions,omitempty"`
}

// NewCreatePostRequest instantiates a new CreatePostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreatePostRequest() *CreatePostRequest {
	this := CreatePostRequest{}
	return &this
}

// NewCreatePostRequestWithDefaults instantiates a new CreatePostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreatePostRequestWithDefaults() *CreatePostRequest {
	this := CreatePostRequest{}
	return &this
}

// GetDate returns the Date field value if set, zero value otherwise.
func (o *CreatePostRequest) GetDate() string {
	if o == nil || IsNil(o.Date) {
		var ret string
		return ret
	}
	return *o.Date
}

// GetDateOk returns a tuple with the Date field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePostRequest) GetDateOk() (*string, bool) {
	if o == nil || IsNil(o.Date) {
		return nil, false
	}
	return o.Date, true
}

// HasDate returns a boolean if a field has been set.
func (o *CreatePostRequest) HasDate() bool {
	if o != nil && !IsNil(o.Date) {
		return true
	}

	return false
}

// SetDate gets a reference to the given string and assigns it to the Date field.
func (o *CreatePostRequest) SetDate(v string) {
	o.Date = &v
}

// GetTime returns the Time field value if set, zero value otherwise.
func (o *CreatePostRequest) GetTime() string {
	if o == nil || IsNil(o.Time) {
		var ret string
		return ret
	}
	return *o.Time
}

// GetTimeOk returns a tuple with the Time field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePostRequest) GetTimeOk() (*string, bool) {
	if o == nil || IsNil(o.Time) {
		return nil, false
	}
	return o.Time, true
}

// HasTime returns a boolean if a field has been set.
func (o *CreatePostRequest) HasTime() bool {
	if o != nil && !IsNil(o.Time) {
		return true
	}

	return false
}

// SetTime gets a reference to the given string and assigns it to the Time field.
func (o *CreatePostRequest) SetTime(v string) {
	o.Time = &v
}

// GetTimezone returns the Timezone field value if set, zero value otherwise.
func (o *CreatePostRequest) GetTimezone() string {
	if o == nil || IsNil(o.Timezone) {
		var ret string
		return ret
	}
	return *o.Timezone
}

// GetTimezoneOk returns a tuple with the Timezone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePostRequest) GetTimezoneOk() (*string, bool) {
	if o == nil || IsNil(o.Timezone) {
		return nil, false
	}
	return o.Timezone, true
}

// HasTimezone returns a boolean if a field has been set.
func (o *CreatePostRequest) HasTimezone() bool {
	if o != nil && !IsNil(o.Timezone) {
		return true
	}

	return false
}

// SetTimezone gets a reference to the given string and assigns it to the Timezone field.
func (o *CreatePostRequest) SetTimezone(v string) {
	o.Timezone = &v
}

// GetSchedule returns the Schedule field value if set, zero value otherwise.
func (o *CreatePostRequest) GetSchedule() bool {
	if o == nil || IsNil(o.Schedule) {
		var ret bool
		return ret
	}
	return *o.Schedule
}

// GetScheduleOk returns a tuple with the Schedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePostRequest) GetScheduleOk() (*bool, bool) {
	if o == nil || IsNil(o.Schedule) {
		return nil, false
	}
	return o.Schedule, true
}

// HasSchedule returns a boolean if a field has been set.
func (o *CreatePostRequest) HasSchedule() bool {
	if o != nil && !IsNil(o.Schedule) {
		return true
	}

	return false
}

// SetSchedule gets a reference to the given bool and assigns it to the Schedule field.
func (o *CreatePostRequest) SetSchedule(v bool) {
	o.Schedule = &v
}

// GetScheduleNow returns the ScheduleNow field value if set, zero value otherwise.
func (o *CreatePostRequest) GetScheduleNow() bool {
	if o == nil || IsNil(o.ScheduleNow) {
		var ret bool
		return ret
	}
	return *o.ScheduleNow
}

// GetScheduleNowOk returns a tuple with the ScheduleNow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePostRequest) GetScheduleNowOk() (*bool, bool) {
	if o == nil || IsNil(o.ScheduleNow) {
		return nil, false
	}
	return o.ScheduleNow, true
}

// HasScheduleNow returns a boolean if a field has been set.
func (o *CreatePostRequest) HasScheduleNow() bool {
	if o != nil && !IsNil(o.ScheduleNow) {
		return true
	}

	return false
}

// SetScheduleNow gets a reference to the given bool and assigns it to the ScheduleNow field.
func (o *CreatePostRequest) SetScheduleNow(v bool) {
	o.ScheduleNow = &v
}

// GetQueue returns the Queue field value if set, zero value otherwise.
func (o *CreatePostRequest) GetQueue() bool {
	if o == nil || IsNil(o.Queue) {
		var ret bool
		return ret
	}
	return *o.Queue
}

// GetQueueOk returns a tuple with the Queue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePostRequest) GetQueueOk() (*bool, bool) {
	if o == nil || IsNil(o.Queue) {
		return nil, false
	}
	return o.Queue, true
}

// HasQueue returns a boolean if a field has been set.
func (o *CreatePostRequest) HasQueue() bool {
	if o != nil && !IsNil(o.Queue) {
		return true
	}

	return false
}

// SetQueue gets a reference to the given bool and assigns it to the Queue field.
func (o *CreatePostRequest) SetQueue(v bool) {
	o.Queue = &v
}

// GetAccounts returns the Accounts field value if set, zero value otherwise.
func (o *CreatePostRequest) GetAccounts() []int32 {
	if o == nil || IsNil(o.Accounts) {
		var ret []int32
		return ret
	}
	return o.Accounts
}

// GetAccountsOk returns a tuple with the Accounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePostRequest) GetAccountsOk() ([]int32, bool) {
	if o == nil || IsNil(o.Accounts) {
		return nil, false
	}
	return o.Accounts, true
}

// HasAccounts returns a boolean if a field has been set.
func (o *CreatePostRequest) HasAccounts() bool {
	if o != nil && !IsNil(o.Accounts) {
		return true
	}

	return false
}

// SetAccounts gets a reference to the given []int32 and assigns it to the Accounts field.
func (o *CreatePostRequest) SetAccounts(v []int32) {
	o.Accounts = v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *CreatePostRequest) GetTags() []int32 {
	if o == nil || IsNil(o.Tags) {
		var ret []int32
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePostRequest) GetTagsOk() ([]int32, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *CreatePostRequest) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []int32 and assigns it to the Tags field.
func (o *CreatePostRequest) SetTags(v []int32) {
	o.Tags = v
}

// GetVersions returns the Versions field value if set, zero value otherwise.
func (o *CreatePostRequest) GetVersions() []Version {
	if o == nil || IsNil(o.Versions) {
		var ret []Version
		return ret
	}
	return o.Versions
}

// GetVersionsOk returns a tuple with the Versions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePostRequest) GetVersionsOk() ([]Version, bool) {
	if o == nil || IsNil(o.Versions) {
		return nil, false
	}
	return o.Versions, true
}

// HasVersions returns a boolean if a field has been set.
func (o *CreatePostRequest) HasVersions() bool {
	if o != nil && !IsNil(o.Versions) {
		return true
	}

	return false
}

// SetVersions gets a reference to the given []Version and assigns it to the Versions field.
func (o *CreatePostRequest) SetVersions(v []Version) {
	o.Versions = v
}

func (o CreatePostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreatePostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Date) {
		toSerialize["date"] = o.Date
	}
	if !IsNil(o.Time) {
		toSerialize["time"] = o.Time
	}
	if !IsNil(o.Timezone) {
		toSerialize["timezone"] = o.Timezone
	}
	if !IsNil(o.Schedule) {
		toSerialize["schedule"] = o.Schedule
	}
	if !IsNil(o.ScheduleNow) {
		toSerialize["schedule_now"] = o.ScheduleNow
	}
	if !IsNil(o.Queue) {
		toSerialize["queue"] = o.Queue
	}
	if !IsNil(o.Accounts) {
		toSerialize["accounts"] = o.Accounts
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.Versions) {
		toSerialize["versions"] = o.Versions
	}
	return toSerialize, nil
}

type NullableCreatePostRequest struct {
	value *CreatePostRequest
	isSet bool
}

func (v NullableCreatePostRequest) Get() *CreatePostRequest {
	return v.value
}

func (v *NullableCreatePostRequest) Set(val *CreatePostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreatePostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreatePostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreatePostRequest(val *CreatePostRequest) *NullableCreatePostRequest {
	return &NullableCreatePostRequest{value: val, isSet: true}
}

func (v NullableCreatePostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreatePostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



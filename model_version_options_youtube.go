/*
PostPuma - OpenAPI 3.0

PostPuma API specifications

API version: 1.0.0
Contact: support@postpuma.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package PostPuma

import (
	"encoding/json"
)

// checks if the VersionOptionsYoutube type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VersionOptionsYoutube{}

// VersionOptionsYoutube struct for VersionOptionsYoutube
type VersionOptionsYoutube struct {
	Title *string `json:"title,omitempty"`
	Status *string `json:"status,omitempty"`
}

// NewVersionOptionsYoutube instantiates a new VersionOptionsYoutube object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVersionOptionsYoutube() *VersionOptionsYoutube {
	this := VersionOptionsYoutube{}
	return &this
}

// NewVersionOptionsYoutubeWithDefaults instantiates a new VersionOptionsYoutube object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVersionOptionsYoutubeWithDefaults() *VersionOptionsYoutube {
	this := VersionOptionsYoutube{}
	return &this
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *VersionOptionsYoutube) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VersionOptionsYoutube) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *VersionOptionsYoutube) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *VersionOptionsYoutube) SetTitle(v string) {
	o.Title = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *VersionOptionsYoutube) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VersionOptionsYoutube) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *VersionOptionsYoutube) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *VersionOptionsYoutube) SetStatus(v string) {
	o.Status = &v
}

func (o VersionOptionsYoutube) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VersionOptionsYoutube) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableVersionOptionsYoutube struct {
	value *VersionOptionsYoutube
	isSet bool
}

func (v NullableVersionOptionsYoutube) Get() *VersionOptionsYoutube {
	return v.value
}

func (v *NullableVersionOptionsYoutube) Set(val *VersionOptionsYoutube) {
	v.value = val
	v.isSet = true
}

func (v NullableVersionOptionsYoutube) IsSet() bool {
	return v.isSet
}

func (v *NullableVersionOptionsYoutube) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVersionOptionsYoutube(val *VersionOptionsYoutube) *NullableVersionOptionsYoutube {
	return &NullableVersionOptionsYoutube{value: val, isSet: true}
}

func (v NullableVersionOptionsYoutube) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVersionOptionsYoutube) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



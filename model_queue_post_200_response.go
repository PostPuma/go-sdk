/*
PostPuma - OpenAPI 3.0

PostPuma API specifications

API version: 1.0.0
Contact: support@postpuma.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package PostPuma

import (
	"encoding/json"
)

// checks if the QueuePost200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QueuePost200Response{}

// QueuePost200Response struct for QueuePost200Response
type QueuePost200Response struct {
	Success *bool `json:"success,omitempty"`
	ScheduledAt *string `json:"scheduled_at,omitempty"`
}

// NewQueuePost200Response instantiates a new QueuePost200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQueuePost200Response() *QueuePost200Response {
	this := QueuePost200Response{}
	return &this
}

// NewQueuePost200ResponseWithDefaults instantiates a new QueuePost200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQueuePost200ResponseWithDefaults() *QueuePost200Response {
	this := QueuePost200Response{}
	return &this
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *QueuePost200Response) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueuePost200Response) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// HasSuccess returns a boolean if a field has been set.
func (o *QueuePost200Response) HasSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *QueuePost200Response) SetSuccess(v bool) {
	o.Success = &v
}

// GetScheduledAt returns the ScheduledAt field value if set, zero value otherwise.
func (o *QueuePost200Response) GetScheduledAt() string {
	if o == nil || IsNil(o.ScheduledAt) {
		var ret string
		return ret
	}
	return *o.ScheduledAt
}

// GetScheduledAtOk returns a tuple with the ScheduledAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueuePost200Response) GetScheduledAtOk() (*string, bool) {
	if o == nil || IsNil(o.ScheduledAt) {
		return nil, false
	}
	return o.ScheduledAt, true
}

// HasScheduledAt returns a boolean if a field has been set.
func (o *QueuePost200Response) HasScheduledAt() bool {
	if o != nil && !IsNil(o.ScheduledAt) {
		return true
	}

	return false
}

// SetScheduledAt gets a reference to the given string and assigns it to the ScheduledAt field.
func (o *QueuePost200Response) SetScheduledAt(v string) {
	o.ScheduledAt = &v
}

func (o QueuePost200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QueuePost200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	if !IsNil(o.ScheduledAt) {
		toSerialize["scheduled_at"] = o.ScheduledAt
	}
	return toSerialize, nil
}

type NullableQueuePost200Response struct {
	value *QueuePost200Response
	isSet bool
}

func (v NullableQueuePost200Response) Get() *QueuePost200Response {
	return v.value
}

func (v *NullableQueuePost200Response) Set(val *QueuePost200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableQueuePost200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableQueuePost200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQueuePost200Response(val *QueuePost200Response) *NullableQueuePost200Response {
	return &NullableQueuePost200Response{value: val, isSet: true}
}

func (v NullableQueuePost200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQueuePost200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


